{"version":3,"file":"static/js/207.1f74d9b5.chunk.js","mappings":"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","sources":["components/Logo/Logo.styled.jsx","components/Logo/Logo.jsx","components/Nav/Nav.styled.jsx","components/Nav/Nav.jsx","components/UserNav/UserNav.styled.jsx","components/UserNav/UserNav.jsx","components/AuthNav/AuthNav.styled.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.styled.jsx","components/Navigation/Navigation.jsx","components/ThemeButton/ThemeButton.styled.jsx","components/ThemeButton/ThemeButton.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/Menu/Menu.jsx","components/SharedLayout/SharedLayout.styled.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const LogoNavLink = styled(NavLink)`\n  z-index: 10;\n`;\n\nexport const LogoText = styled.p`\n  font-family: ${({ theme }) => theme.fonts.logo};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 48px;\n  letter-spacing: 0.07em;\n  color: ${({ theme }) => theme.palette.primary};\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    margin-right: 80px;\n  }\n`;\n\nexport const LogoAccent = styled.span`\n  color: ${({ theme }) => theme.palette.accent};\n`;\n","import { LogoNavLink, LogoText, LogoAccent } from './Logo.styled'\n\nconst Logo = () => {\n\treturn (\n\t\t<LogoNavLink to=\"/\">\n    <LogoText>\n      pe<LogoAccent>t</LogoAccent>ly\n    </LogoText>\n\t\t</LogoNavLink>\n  );\n};\n\nexport default Logo;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const NavContainer = styled.div`\n@media screen and (min-width: ${({ theme }) => theme.screens.tablet}) and (max-width: ${({theme,}) => theme.screens.toDesktop}) {\n    padding: 160px 0;\n    position: fixed;\n    top: 0;\n\t\tleft: 0;\n    width: 100%;\n    min-height: 100vh;\n    text-align: center;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n    transition: ${({ theme }) => theme.animations.transition};\n    z-index: 9;\n  }\n`;\n\nexport const NavBox = styled.nav`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-top: 60px;  \n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-flex;\n    flex-direction: column;\n    gap: 60px;\n\t\tpadding: 0;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n    gap: 80px;\n    padding: 0;\n  }\n`;\n\nexport const LinkNav = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  transition: ${({ theme }) => theme.animations.transition};\n  &:hover,\n  &:focus {\n    text-decoration-line: underline;\n    color: ${({ theme }) => theme.palette.accent};\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  &.active {\n    color: ${({ theme }) => theme.palette.accent};\n    text-decoration-line: underline;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.screens.toDesktop}) {\n    display: inline-flex;\n    justify-content: center;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { NavContainer, NavBox, LinkNav } from './Nav.styled';\n\nconst Nav = ({ onCloseMenu }) => {\n  return (\n    <NavContainer>\n      <NavBox>\n        <LinkNav\n          to=\"news\"\n          className={'header-link'}\n          onClick={() => {\n            onCloseMenu();\n          }}\n        >\n          News\n        </LinkNav>\n        <LinkNav\n          to=\"notices\"\n          className={'header-link'}\n          onClick={() => {\n            onCloseMenu();\n          }}\n        >\n          Find pet\n        </LinkNav>\n        <LinkNav\n          to=\"friends\"\n          className={'header-link'}\n          onClick={() => {\n            onCloseMenu();\n          }}\n        >\n          Our friends\n        </LinkNav>\n      </NavBox>\n    </NavContainer>\n  );\n};\n\nNav.propTypes = {\n  onCloseMenu: PropTypes.func,\n};\n\nexport default Nav;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const UserLink = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.6;\n  height: 35px;\n  padding: 0 28px;\n  gap: 12px;\n  color: ${({ theme }) => theme.palette.triadic};\n  background: ${({ theme }) => theme.palette.accent};\n  border-radius: 40px;\n  fill: ${({ theme }) => theme.palette.triadic};\n  transition: ${({ theme }) => theme.animations.transition};\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.hoverAccent};\n\t\ttransform: ${({ theme }) => theme.animations.transform};\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: flex;\n    font-size: 20px;\n    line-height: 1.35;\n    height: 44px;\n  }\n`;\n\nexport const IconSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    width: 28px;\n    height: 28px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { UserLink, IconSvg } from './UserNav.styled';\nimport icons from '../../assets/icons/icons.svg';\n\nconst UserNav = ({ onCloseMenu }) => {\n  return (\n    <nav>\n      <UserLink\n        to=\"user\"\n        className={'header-link'}\n        onClick={() => {\n          onCloseMenu();\n        }}\n      >\n        <IconSvg>\n          <use href={`${icons}#icon-account`}></use>\n        </IconSvg>\n        Account\n      </UserLink>\n    </nav>\n  );\n};\n\nUserNav.propTypes = {\n  onCloseMenu: PropTypes.func,\n};\n\nexport default UserNav;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const AuthNavBox = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    gap: 20px;\n  }\n`;\n\nexport const AuthLink = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.6;\n  padding: 0 25px;\n  border-radius: 40px;\n  height: 35px;\n  color: inherit;\n  background: ${({ theme }) => theme.backgrounds.secondary};\n  border: 2px solid ${({ theme }) => theme.palette.accent};\n  transition: ${({ theme }) => theme.animations.transition};\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.accent};\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n  &.active {\n    color: ${({ theme }) => theme.palette.triadic};\n    background: ${({ theme }) => theme.palette.accent};\n  }\n  &.active:hover,\n  &.active:focus {\n    background: ${({ theme }) => theme.palette.hoverAccent};\n    transform: ${({ theme }) => theme.animations.transform};\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: flex;\n    font-size: 20px;\n    line-height: 1.35;\n    height: 44px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    font-size: inherit;\n    line-height: inherit;\n    height: 47px;\n    padding: 0 28px;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { AuthNavBox, AuthLink } from './AuthNav.styled';\n\nconst AuthNav = ({ onCloseMenu }) => {\n  const location = useLocation();\n  // console.log(location.pathname);\n\n  return (\n    <AuthNavBox>\n      <AuthLink\n        to=\"login\"\n        className={location.pathname === '/register' ? 'header-link' : 'header-link  active'}\n        onClick={() => {\n          onCloseMenu();\n        }}\n      >\n        Login\n      </AuthLink>\n      <AuthLink\n        to=\"register\"\n        className={'header-link'}\n        onClick={() => {\n          onCloseMenu();\n        }}\n      >\n        Registration\n      </AuthLink>\n    </AuthNavBox>\n  );\n};\n\nAuthNav.propTypes = {\n  onCloseMenu: PropTypes.func,\n};\n\nexport default AuthNav;\n","import styled from '@emotion/styled';\n\nexport const NavigationBox = styled.nav`\n  width: 100%;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n  @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n    position: fixed;\n    top: 0;\n    left: 0;\n    left: 0;\n    width: 100%;\n    min-height: 100vh;\n    padding: 100px 0px;\n    text-align: center;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n    transition: ${({ theme }) => theme.animations.transition};\n    z-index: 9;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 48px;\n    line-height: 1.43;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    font-size: 20px;\n    line-height: 1.35;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport Nav from '../Nav';\nimport UserNav from '../UserNav';\nimport AuthNav from '../AuthNav';\nimport { NavigationBox } from './Navigation.styled';\n\nconst Navigation = ({ onWidth, onCloseMenu }) => {\n  const isLogged = useSelector(selectAuthToken);\n\n  return (\n    <NavigationBox>\n      {/* <UserNav onCloseMenu={onCloseMenu} /> <AuthNav onCloseMenu={onCloseMenu} /> */}\n      {isLogged ? <UserNav onCloseMenu={onCloseMenu} /> : <AuthNav onCloseMenu={onCloseMenu} />}\n      {onWidth >= 1280 && <Nav onCloseMenu={onCloseMenu} />}\n    </NavigationBox>\n  );\n};\n\nNavigation.propTypes = {\n  onWidth: PropTypes.number.isRequired,\n  onCloseMenu: PropTypes.func,\n};\n\nexport default Navigation;\n","import styled from '@emotion/styled';\n\nexport const ThemeBtn = styled.button`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: auto;\n\n  font-size: 14px;\n  line-height: 1.6;\n  padding: 0;\n  border-radius: 40px;\n  min-width: 39px;\n  height: 39px;\n  color: ${({ theme }) => theme.palette.triadic};\n  background: ${({ theme }) => theme.palette.accent};\n  border: none;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    min-width: 44px;\n    height: 44px;\n  }\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:hover,\n  &:focus {\n    background: ${({ theme }) => theme.palette.hoverAccent};\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const ThemeIcon = styled.svg`\n  width: 22px;\n  height: 22px;\n  object-fit: contain;\n  fill: currentColor;\n`;\n","import { constants } from 'constants/constants';\nimport { ThemeBtn, ThemeIcon } from './ThemeButton.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useState } from 'react';\nimport { toggleTheme, selectThemeValue } from 'redux/theme';\n\nconst { icons } = constants;\n\nconst ThemeButton = () => {\n  const [theme, setTheme] = useState(useSelector(selectThemeValue));\n  const dispatch = useDispatch();\n\n  const toggleThemeState = () => {\n    dispatch(toggleTheme());\n    setTheme(theme => !theme);\n  };\n\n  return (\n    <ThemeBtn\n      type=\"button\"\n      title={`Toggle theme to ${theme ? 'Light' : 'Dark'}`}\n      onClick={toggleThemeState}\n    >\n      <ThemeIcon aria-label=\"theme icon\">\n        <use href={`${icons}#icon-${theme ? 'moon' : 'sun'}`} />\n      </ThemeIcon>\n    </ThemeBtn>\n  );\n};\n\nexport default ThemeButton;\n","import styled from '@emotion/styled';\n\nexport const HeaderBox = styled.nav`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 74px;\n  width: 100%;\n  gap: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    height: 98px;\n  }\n`;\n\nexport const MenuButton = styled.button`\n  width: 40px;\n  height: 40px;\n  padding: 0;\n  background: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 10;\n\n  color: ${({ theme }) => theme.palette.primary};\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.accent};\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const MenuIcon = styled.svg`\n  width: 30px;\n  height: 20px;\n  object-fit: contain;\n  fill: currentColor;\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from 'helpers';\nimport Logo from '../Logo';\nimport Navigation from '../Navigation';\nimport ThemeButton from 'components/ThemeButton';\nimport { constants } from 'constants/constants';\nimport { HeaderBox, MenuButton, MenuIcon } from './Header.styled';\n\nconst { icons } = constants;\n\nconst Header = ({ onWidth, onOpenMenu, onCloseMenu }) => {\n  return (\n    <header>\n      <Container>\n        <HeaderBox>\n          <Logo />\n          {onWidth >= 768 && <Navigation onWidth={onWidth} onCloseMenu={onCloseMenu} />}\n          <ThemeButton />\n          {onWidth < 1280 && (\n            <MenuButton type=\"button\" title=\"Toggle menu\" onClick={() => onOpenMenu()}>\n              <MenuIcon aria-label=\"menu icon\">\n                <use href={`${icons}#icon-menu`}></use>\n              </MenuIcon>\n            </MenuButton>\n          )}\n        </HeaderBox>\n      </Container>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  onWidth: PropTypes.number.isRequired,\n  onOpenMenu: PropTypes.func.isRequired,\n  onCloseMenu: PropTypes.func,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport UserNav from '../UserNav';\nimport AuthNav from '../AuthNav';\nimport Nav from '../Nav';\nimport { NavigationBox } from '../Navigation/Navigation.styled';\n\nconst Menu = ({ onWidth }) => {\n  const isLogged = useSelector(selectAuthToken);\n\n  return (\n    <NavigationBox className=\"menu\">\n      {onWidth < 768 && <>{isLogged ? <UserNav /> : <AuthNav />}</>}\n      <Nav />\n    </NavigationBox>\n  );\n};\n\nMenu.propTypes = {\n  onWidth: PropTypes.number.isRequired,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n`;\n","import { Outlet } from 'react-router-dom';\nimport Header from 'components/Header';\nimport Menu from 'components/Menu';\nimport { Main } from './SharedLayout.styled';\nimport { useState, useEffect } from 'react';\n\nconst SharedLayout = () => {\n  const [isMenu, setIsMenu] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const handleClick = () => {\n    setIsMenu(!isMenu);\n    document.body.classList.toggle('lock');\n  };\n\n  const handleMenuCloseClick = () => {\n    setIsMenu(false);\n    document.body.classList.remove('lock');\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      setWidth(window.innerWidth);\n    });\n  }, [width]);\n\n  return (\n    <>\n      <Header onWidth={width} onOpenMenu={handleClick} onCloseMenu={handleMenuCloseClick} />\n      <Main>\n        {isMenu && width < 1280 && <Menu onWidth={width} />}\n        <Outlet />\n      </Main>\n    </>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["LogoNavLink","styled","NavLink","LogoText","theme","fonts","logo","palette","primary","screens","desktop","LogoAccent","accent","to","NavContainer","tablet","toDesktop","backgrounds","animations","transition","NavBox","LinkNav","onCloseMenu","className","onClick","UserLink","triadic","hoverAccent","transform","IconSvg","href","icons","AuthNavBox","AuthLink","secondary","location","useLocation","pathname","NavigationBox","toTablet","onWidth","isLogged","useSelector","selectAuthToken","ThemeBtn","ThemeIcon","constants","useState","selectThemeValue","setTheme","dispatch","useDispatch","type","title","toggleTheme","HeaderBox","MenuButton","MenuIcon","onOpenMenu","Main","isMenu","setIsMenu","window","innerWidth","width","setWidth","useEffect","addEventListener","document","body","classList","toggle","remove"],"sourceRoot":""}
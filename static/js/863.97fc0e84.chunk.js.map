{"version":3,"file":"static/js/863.97fc0e84.chunk.js","mappings":"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","sources":["components/Logo/Logo.styled.jsx","components/Logo/Logo.jsx","components/Nav/Nav.styled.jsx","components/Nav/Nav.jsx","components/UserNav/UserNav.styled.jsx","components/UserNav/UserNav.jsx","components/AuthNav/AuthNav.styled.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.styled.jsx","components/Navigation/Navigation.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/Menu/Menu.jsx","components/SharedLayout/SharedLayout.styled.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LogoText = styled.p`\n  font-family: ${({ theme }) => theme.fonts.logo};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 48px;\n  letter-spacing: 0.07em;\n  color: ${({ theme }) => theme.palette.primary};\n  z-index: 10;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    margin-right: 80px;\n  }\n`;\n\nexport const LogoAccent = styled.span`\n  color: ${({ theme }) => theme.palette.accent};\n`;\n","import { LogoText, LogoAccent } from './Logo.styled'\n\nconst Logo = () => {\n  return (\n    <LogoText>\n      pe<LogoAccent>t</LogoAccent>ly\n    </LogoText>\n  );\n};\n\nexport default Logo;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const NavContainer = styled.div`\n@media screen and (min-width: ${({ theme }) => theme.screens.tablet}) and (max-width: ${({theme,}) => theme.screens.toDesktop}) {\n    padding: 160px 0;\n    position: fixed;\n    top: 0;\n    /* left: -101%; */\n\t\tleft: 0;\n    width: 100%;\n    min-height: 100vh;\n    text-align: center;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n    transition: ${({ theme }) => theme.animations.transition};\n    z-index: 9;\n    /* &.isOpen {\n      left: 0;\n      transition: ${({ theme }) => theme.animations.transition};\n    } */\n  }\n`;\n\nexport const NavBox = styled.nav`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-top: 60px;  \n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-flex;\n    flex-direction: column;\n    gap: 60px;\n\t\tpadding: 0;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n    gap: 80px;\n    padding: 0;\n  }\n`;\n\nexport const LinkNav = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  transition: ${({ theme }) => theme.animations.transition};\n  &:hover,\n  &:focus {\n    text-decoration-line: underline;\n    color: ${({ theme }) => theme.palette.accent};\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  &.active {\n    color: ${({ theme }) => theme.palette.accent};\n    text-decoration-line: underline;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.screens.toDesktop}) {\n    display: inline-flex;\n    justify-content: center;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n  }\n`;\n","import { NavContainer, NavBox, LinkNav } from './Nav.styled';\n\nconst Nav = () => {\n  return (\n    <NavContainer>\n      <NavBox>\n        <LinkNav to=\"news\" className={'link'}>\n          News\n        </LinkNav>\n        <LinkNav to=\"notices/for-free\" className={'link'}>\n          Find pet\n        </LinkNav>\n        <LinkNav to=\"friends\" className={'link'}>\n          Our friends\n        </LinkNav>\n      </NavBox>\n    </NavContainer>\n  );\n};\n\nexport default Nav;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const UserLink = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.6;\n  height: 35px;\n  padding: 0 28px;\n  gap: 12px;\n  color: ${({ theme }) => theme.palette.triadic};\n  background: ${({ theme }) => theme.palette.accent};\n  border-radius: 40px;\n  fill: ${({ theme }) => theme.palette.triadic};\n  transition: ${({ theme }) => theme.animations.transition};\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: flex;\n    font-size: 20px;\n    line-height: 1.35;\n    height: 44px;\n  }\n`;\n\nexport const IconSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    width: 28px;\n    height: 28px;\n  }\n`;\n","import { UserLink, IconSvg } from './UserNav.styled';\nimport icons from '../../assets/icons/icons.svg';\n\nconst UserNav = () => {\n  return (\n    <nav>\n      <UserLink to=\"user\" className={'accaunt'}>\n        <IconSvg>\n          <use href={`${icons}#icon-account`}></use>\n        </IconSvg>\n        Account\n      </UserLink>\n    </nav>\n  );\n};\n\nexport default UserNav;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const AuthNavBox = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    gap: 20px;\n  }\n`;\n\nexport const AuthLink = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.6;\n  padding: 0 28px;\n  border-radius: 40px;\n  height: 35px;\n  color: inherit;\n  background: ${({ theme }) => theme.palette.triadic};\n  border: 2px solid ${({ theme }) => theme.palette.accent};\n  transition: ${({ theme }) => theme.animations.transition};\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  &.active {\n    color: ${({ theme }) => theme.palette.triadic};\n    background: ${({ theme }) => theme.palette.accent};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: flex;\n    font-size: 20px;\n    line-height: 1.35;\n    height: 44px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    font-size: inherit;\n    line-height: inherit;\n    height: 47px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { AuthNavBox, AuthLink } from './AuthNav.styled';\n\nconst AuthNav = () => {\n  const location = useLocation();\n  console.log(location.pathname);\n\n  return (\n    <AuthNavBox>\n      <AuthLink\n        to=\"login\"\n        className={location.pathname === '/register' ? 'headerAuth' : 'headerAuth  active'}\n      >\n        Login\n      </AuthLink>\n      <AuthLink to=\"register\" className={'headerAuth'}>\n        Registration\n      </AuthLink>\n    </AuthNavBox>\n  );\n};\n\nexport default AuthNav;\n","import styled from '@emotion/styled';\n\nexport const NavigationBox = styled.nav`\n  width: 100%;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n  @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n    /* position: fixed; */\n    top: 0;\n    /* left: -101%; */\n    left: 0;\n    width: 100%;\n    min-height: 100vh;\n    padding: 25px 0px;\n    text-align: center;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n    transition: ${({ theme }) => theme.animations.transition};\n    z-index: 9;\n    /* &.isOpen {\n      left: 0;\n      transition: ${({ theme }) => theme.animations.transition};\n    } */\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 48px;\n    line-height: 1.43;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    font-size: 20px;\n    line-height: 1.35;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport Nav from '../Nav';\nimport UserNav from '../UserNav';\nimport AuthNav from '../AuthNav';\nimport { NavigationBox } from './Navigation.styled';\n\nconst Navigation = ({ onWidth }) => {\n  const isLogged = useSelector(selectAuthToken);\n\n  return (\n    <NavigationBox>\n      {/* <UserNav /> <AuthNav /> */}\n      {isLogged ? <UserNav /> : <AuthNav />}\n      {onWidth >= 1280 && <Nav />}\n    </NavigationBox>\n  );\n};\n\nNavigation.propTypes = {\n  onWidth: PropTypes.number.isRequired,\n};\n\nexport default Navigation;\n","import styled from '@emotion/styled';\n\nexport const HeaderBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 74px;\n  width: 100%;\n  gap: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    height: 98px;\n  }\n`;\n\nexport const MenuButton = styled.button`\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 10;\n  /* @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    display: none;\n  } */\n`;\n","import PropTypes from 'prop-types';\nimport { Container } from 'helpers';\nimport Logo from '../Logo';\nimport Navigation from '../Navigation';\nimport icons from '../../assets/icons/icons.svg';\nimport { HeaderBox, MenuButton } from './Header.styled';\n// import { useState } from 'react';\n\nconst Header = ({ onWidth, onOpenMenu }) => {\n  // const [open, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Container>\n        <HeaderBox>\n          <Logo />\n          {onWidth >= 768 && <Navigation onWidth={onWidth} />}\n          {onWidth < 1280 && (\n            <MenuButton onClick={() => onOpenMenu()}>\n              <svg width=\"30\" height=\"20\">\n                <use href={`${icons}#icon-menu`}></use>\n              </svg>\n            </MenuButton>\n          )}\n        </HeaderBox>\n      </Container>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  onWidth: PropTypes.number.isRequired,\n  onOpenMenu: PropTypes.func.isRequired,\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport UserNav from '../UserNav';\nimport AuthNav from '../AuthNav';\nimport Nav from '../Nav';\nimport { NavigationBox } from '../Navigation/Navigation.styled';\n\nconst Menu = ({ onWidth }) => {\n  const isLogged = useSelector(selectAuthToken);\n\n  return (\n    <NavigationBox>\n      {onWidth < 768 && <>{isLogged ? <UserNav /> : <AuthNav />}</>}\n      <Nav />\n    </NavigationBox>\n  );\n};\n\nMenu.propTypes = {\n  onWidth: PropTypes.number.isRequired,\n};\n\nexport default Menu;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n`;\n","import { Outlet } from 'react-router-dom';\nimport Header from 'components/Header';\nimport Menu from 'components/Menu';\nimport { Main } from './SharedLayout.styled';\nimport { useState, useEffect } from 'react';\n\nconst SharedLayout = () => {\n  const [isMenu, setIsMenu] = useState(false);\n  const [width, setWidth] = useState(window.innerWidth);\n  // const location = useLocation().pathname;\n  // const [path, setPath] = useState(location);\n\n  const handleClick = () => {\n    setIsMenu(!isMenu);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', () => {\n      setWidth(window.innerWidth);\n    });\n  });\n\n  return (\n    <>\n      <Header onWidth={width} onOpenMenu={handleClick} />\n      <Main>\n        {isMenu && width < 1280 && <Menu onWidth={width} />}\n        <Outlet />\n      </Main>\n    </>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["LogoText","styled","theme","fonts","logo","palette","primary","screens","desktop","LogoAccent","accent","NavContainer","tablet","toDesktop","backgrounds","animations","transition","NavBox","LinkNav","NavLink","to","className","UserLink","triadic","IconSvg","href","icons","AuthNavBox","AuthLink","location","useLocation","console","log","pathname","NavigationBox","toTablet","onWidth","isLogged","useSelector","selectAuthToken","HeaderBox","MenuButton","onOpenMenu","onClick","width","height","Main","useState","isMenu","setIsMenu","window","innerWidth","setWidth","useEffect","addEventListener"],"sourceRoot":""}
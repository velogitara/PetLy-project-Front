{"version":3,"file":"static/js/727.d60cd35f.chunk.js","mappings":"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","sources":["components/Logo/Logo.styled.jsx","components/Logo/Logo.jsx","components/Nav/Nav.styled.jsx","components/Nav/Nav.jsx","components/UserNav/UserNav.styled.jsx","components/UserNav/UserNav.jsx","components/AuthNav/AuthNav.styled.jsx","components/AuthNav/AuthNav.jsx","components/Navigation/Navigation.styled.jsx","components/Navigation/Navigation.jsx","components/Header/Header.styled.jsx","components/Header/Header.jsx","components/SharedLayout/SharedLayout.styled.jsx","components/SharedLayout/SharedLayout.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const LogoText = styled.p`\n  font-family: ${({ theme }) => theme.fonts.logo};\n  font-style: normal;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 48px;\n  letter-spacing: 0.07em;\n  color: ${({ theme }) => theme.palette.primary};\n  z-index: 10;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    margin-right: 80px;\n  }\n`;\n\nexport const LogoAccent = styled.span`\n  color: ${({ theme }) => theme.palette.accent};\n`;\n","import { LogoText, LogoAccent } from './Logo.styled'\n\nconst Logo = () => {\n  return (\n    <LogoText>\n      pe<LogoAccent>t</LogoAccent>ly\n    </LogoText>\n  );\n};\n\nexport default Logo;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const NavContainer = styled.div`\n@media screen and (min-width: ${({ theme }) => theme.screens.tablet}) and (max-width: ${({theme,}) => theme.screens.toDesktop}) {\n    padding: 160px 0;\n    position: absolute;\n    top: 0;\n    left: -101%;\n    width: 100%;\n    min-height: 100vh;\n    text-align: center;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n    transition: ${({ theme }) => theme.animations.transition};\n    z-index: 9;\n    &.isOpen {\n      left: 0;\n      transition: ${({ theme }) => theme.animations.transition};\n    }\n  }\n`;\n\nexport const NavBox = styled.nav`\n  display: inline-flex;\n  flex-direction: column;\n  gap: 40px;\n  padding-top: 60px;  \n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-flex;\n    flex-direction: column;\n    gap: 60px;\n\t\tpadding: 0;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n    gap: 80px;\n    padding: 0;\n  }\n`;\n\nexport const LinkNav = styled(NavLink)`\n  text-decoration: none;\n  color: inherit;\n  transition: ${({ theme }) => theme.animations.transition};\n  &:hover,\n  &:focus {\n    text-decoration-line: underline;\n    color: ${({ theme }) => theme.palette.accent};\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  &.active {\n    color: ${({ theme }) => theme.palette.accent};\n    text-decoration-line: underline;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.screens.toDesktop}) {\n    display: inline-flex;\n    justify-content: center;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { NavContainer, NavBox, LinkNav } from './Nav.styled';\n\nconst Nav = ({ onOpen }) => {\n  return (\n    <NavContainer className={onOpen ? 'isOpen' : ''}>\n\t\t\t<NavBox>\n\t\t\t\t<LinkNav to=\"news\" className={'link'}>\n        News\n      </LinkNav>\n      <LinkNav to=\"notices/for-free\" className={'link'}>\n        Find pet\n      </LinkNav>\n      <LinkNav to=\"friends\" className={'link'}>\n        Our friend\n      </LinkNav>\n\t\t\t</NavBox>\n    </NavContainer>\n  );\n};\n\nNav.propTypes = {\n  onOpen: PropTypes.func.isRequired,\n};\n\nexport default Nav;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const UserLink = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.6;\n  height: 35px;\n  padding: 0 28px;\n  gap: 12px;\n  color: ${({ theme }) => theme.palette.triadic};\n  background: ${({ theme }) => theme.palette.accent};\n  border-radius: 40px;\n  fill: ${({ theme }) => theme.palette.triadic};\n  transition: ${({ theme }) => theme.animations.transition};\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: flex;\n    font-size: 20px;\n    line-height: 1.35;\n    height: 44px;\n  }\n`;\n\nexport const IconSvg = styled.svg`\n  width: 20px;\n  height: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    width: 28px;\n    height: 28px;\n  }\n`;\n","import { UserLink, IconSvg } from './UserNav.styled';\nimport icons from '../../assets/icons/icons.svg';\n\nconst UserNav = () => {\n  return (\n    <nav>\n      <UserLink to=\"user\" className={'link'}>\n        <IconSvg>\n          <use href={`${icons}#icon-account`}></use>\n        </IconSvg>\n        Account\n      </UserLink>\n    </nav>\n  );\n};\n\nexport default UserNav;\n","import { NavLink } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const AuthNavBox = styled.nav`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 12px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    gap: 20px;\n  }\n`;\n\nexport const AuthLink = styled(NavLink)`\n  display: inline-flex;\n  justify-content: center;\n  align-items: center;\n  font-size: 14px;\n  line-height: 1.6;\n  padding: 0 28px;\n  border-radius: 40px;\n  height: 35px;\n  color: inherit;\n  background: ${({ theme }) => theme.palette.triadic};\n  border: 2px solid ${({ theme }) => theme.palette.accent};\n  transition: ${({ theme }) => theme.animations.transition};\n  text-decoration: none;\n  &:hover,\n  &:focus {\n    opacity: 0.9;\n    transition: ${({ theme }) => theme.animations.transition};\n  }\n  &.active {\n    color: ${({ theme }) => theme.palette.triadic};\n    background: ${({ theme }) => theme.palette.accent};\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: flex;\n    font-size: 20px;\n    line-height: 1.35;\n    height: 44px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    font-size: inherit;\n    line-height: inherit;\n    height: 47px;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport { AuthNavBox, AuthLink } from './AuthNav.styled';\n\nconst AuthNav = () => {\n  const location = useLocation();\n  console.log(location.pathname);\n\n  return (\n    <AuthNavBox>\n      <AuthLink to=\"login\" className={location.pathname === '/register' ? 'link' : 'link  active'}>\n        Login\n      </AuthLink>\n      <AuthLink to=\"register\" className={'link'}>\n        Registration\n      </AuthLink>\n    </AuthNavBox>\n  );\n};\n\nexport default AuthNav;\n","import styled from '@emotion/styled';\n\nexport const NavigationBox = styled.nav`\n  width: 100%;\n  font-weight: 500;\n  font-size: 32px;\n  line-height: 1.38;\n  letter-spacing: 0.04em;\n  @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n    position: absolute;\n    top: 0;\n    left: -101%;\n    width: 100%;\n    min-height: 100vh;\n    padding: 100px 0px;\n    text-align: center;\n    overflow: auto;\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n    transition: ${({ theme }) => theme.animations.transition};\n    z-index: 9;\n    &.isOpen {\n      left: 0;\n      transition: ${({ theme }) => theme.animations.transition};\n    }\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-flex;\n    flex-direction: row-reverse;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 48px;\n    line-height: 1.43;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    font-size: 20px;\n    line-height: 1.35;\n  }\n`;\n","// import { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Nav from '../Nav';\nimport UserNav from '../UserNav';\nimport AuthNav from '../AuthNav';\nimport { NavigationBox } from './Navigation.styled';\n\nconst Navigation = ({ onOpen }) => {\n  // const isLoggedIn = useSelector(state => state.auth.isLoggedIn);\n\n  return (\n    <NavigationBox className={onOpen ? 'isOpen' : ''}>\n      {/* {!isLoggedIn ?  */}\n      <AuthNav />\n      {/* : */}\n      <UserNav />\n      {/* } */}\n      <Nav onOpen={onOpen} />\n    </NavigationBox>\n  );\n};\n\nNavigation.propTypes = {\n  onOpen: PropTypes.func.isRequired,\n};\n\nexport default Navigation;\n","import styled from '@emotion/styled';\n\nexport const HeaderBox = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  height: 74px;\n  width: 100%;\n  gap: 20px;\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    height: 98px;\n  }\n`;\n\nexport const MenuButton = styled.button`\n  width: 40px;\n  height: 40px;\n  background: transparent;\n  border: none;\n  outline: none;\n  cursor: pointer;\n  z-index: 10;\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    display: none;\n  }\n`;\n","import { useState } from 'react';\nimport { Container } from 'helpers';\nimport Logo from '../Logo';\nimport Navigation from '../Navigation';\nimport icons from '../../assets/icons/icons.svg';\nimport { HeaderBox, MenuButton } from './Header.styled';\n\nconst Header = () => {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <header>\n      <Container>\n        <HeaderBox>\n          <Logo />\n          <Navigation onOpen={open} />\n          <MenuButton onClick={() => setOpen(!open)}>\n            <svg width=\"30\" height=\"20\">\n              <use href={`${icons}#icon-menu`}></use>\n            </svg>\n          </MenuButton>\n        </HeaderBox>\n      </Container>\n    </header>\n  );\n};\n\nexport default Header;\n","import styled from '@emotion/styled';\n\nexport const Main = styled.main`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n`;\n","import { Outlet } from 'react-router-dom';\nimport Header from 'components/Header';\nimport { Main } from './SharedLayout.styled';\nconst SharedLayout = () => {\n  return (\n    <>\n      <Header />\n      <Main>\n        <Outlet />\n      </Main>\n    </>\n  );\n};\n\nexport default SharedLayout;\n"],"names":["LogoText","styled","theme","fonts","logo","palette","primary","screens","desktop","LogoAccent","accent","NavContainer","tablet","toDesktop","backgrounds","animations","transition","NavBox","LinkNav","NavLink","onOpen","className","to","UserLink","triadic","IconSvg","href","icons","AuthNavBox","AuthLink","location","useLocation","console","log","pathname","NavigationBox","toTablet","HeaderBox","MenuButton","useState","open","setOpen","onClick","width","height","Main"],"sourceRoot":""}
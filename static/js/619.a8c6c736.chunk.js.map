{"version":3,"file":"static/js/619.a8c6c736.chunk.js","mappings":"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","sources":["hooks/useNotices.js","hooks/useNoticeById.js","hooks/useNews.js","hooks/useFriends.js","components/OurFriendsTitle/OurFriendsTitle.styled.jsx","components/OurFriendsTitle/OurFriendsTitle.jsx","components/OurFriendsCards/OurFriendsCards.styled.jsx","components/OurFriendsCards/OurFriendsCards.jsx","pages/OurFriendsPage/OurFriendsPage.jsx"],"sourcesContent":["import { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport { useListNoticesByCategoryQuery, useListUserNoticesQuery } from 'redux/notices';\n\nconst useNotices = ({ categoryName, page = 1, limit = 8 }) => {\n  const isLogged = useSelector(selectAuthToken);\n\n  const isOwn = categoryName === 'own';\n  const isFavorite = categoryName === 'favorite';\n  const isByCategory = !isOwn && !isFavorite;\n\n  const byCategoryNotices = useListNoticesByCategoryQuery(\n    { category: categoryName, page, limit },\n    {\n      skip: isOwn || isFavorite,\n      refetchOnMountOrArgChange: true,\n    }\n  )?.data?.data?.notices;\n  const ownNotices = useListUserNoticesQuery(\n    { category: categoryName, page, limit },\n    {\n      skip: !isLogged || isFavorite || isByCategory,\n      refetchOnMountOrArgChange: true,\n    }\n  )?.data?.data?.notices;\n  const favoriteNotices = useListUserNoticesQuery(\n    { category: categoryName, page, limit, favorite: true },\n    {\n      skip: !isLogged || isOwn || isByCategory,\n      refetchOnMountOrArgChange: true,\n    }\n  )?.data?.data?.notices;\n\n  let result;\n  switch (categoryName) {\n    case 'own':\n      result = ownNotices;\n      break;\n    case 'favorite':\n      result = favoriteNotices;\n      break;\n    default:\n      result = byCategoryNotices;\n  }\n  return result ?? [];\n};\n\nexport { useNotices };\n","import { useGetNoticesByIdQuery } from 'redux/notices';\n\nconst useGetNoticeById = ({ noticeId }) => {\n  // const isLogged = useSelector(selectAuthToken);\n  const { data } = useGetNoticesByIdQuery(\n    { noticeId },\n    {\n      // skip: !isLogged,\n      refetchOnMountOrArgChange: true,\n    }\n  );\n\n  return data?.data?.notice ?? null;\n};\n\nexport { useGetNoticeById };\n","import { useListNewsQuery } from 'redux/news';\n\nconst useNews = ({page= 1, query=''}) => {\n  const { data, isLoading } = useListNewsQuery({ page, query });\n    \n  return { data: data?.news ?? [], isLoading};\n};\n\nexport { useNews };\n","import { useListFriendsQuery } from 'redux/friends';\n\nconst useFriends = () => {\n  const { data } = useListFriendsQuery();\n\n  return data?.data?.friends ?? [];\n};\n\nexport { useFriends };\n","import styled from '@emotion/styled';\nimport { theme } from 'helpers';\n\nconst { fonts, screens } = theme;\n\nconst Title = styled.h2`\n  font-family: ${fonts.primary},\n  font-weight: 700;\n  margin-bottom: 40px;\n  font-size: 24px;\n  line-height: 1.38;\n   @media (min-width: ${screens.tablet}) {\n    font-size: 48px;\n    margin-bottom: 45px;\n   } ;\n   \n    @media (min-width: ${screens.desktop}) {\n      margin-bottom: 60px;\n   }`;\n\nconst StyledComponents = { Title };\n\nexport default StyledComponents;\n","import StyledComponents from './OurFriendsTitle.styled';\nconst { Title } = StyledComponents;\n\nconst OurFriendsTitle = () => {\n  return <Title>Our friends</Title>;\n};\n\nexport default OurFriendsTitle;\n","import styled from '@emotion/styled';\nimport { theme } from 'helpers';\n\nconst { backgrounds, shadows, fonts, screens, palette } = theme;\n\nconst Card = styled.li`\n  background-color: ${backgrounds.secondary};\n  text-align: center;\n  border-radius: 40px;\n  margin-bottom: 12px;\n  padding: 12px 4px;\n  box-shadow: ${shadows.card};\n  @media (min-width: ${screens.tablet}) {\n    margin-bottom: 32px;\n    margin-right: 32px;\n    flex-basis: calc(100% / 2 - 32px);\n    padding: 16px 17px;\n  }\n\n  @media (min-width: ${screens.desktop}) {\n    flex-basis: calc(100% / 3 - 32px);\n  } ;\n`;\n\nconst CardPic = styled.img`\n  margin-right: 12px;\n  width: 110px;\n  @media (min-width: ${screens.tablet}) {\n    margin-right: 14px;\n    width: 120px;\n  }\n  @media (min-width: ${screens.desktop}) {\n    margin-right: 12px;\n    width: 158px;\n  } ;\n`;\n\nconst List = styled.ul`\n  list-style: none;\n  margin: 0;\n  padding: 0;\n  @media (min-width: ${screens.tablet}) {\n    display: flex;\n    flex-wrap: wrap;\n    margin-bottom: -32px;\n    margin-right: -32px;\n  } ;\n`;\n\nconst BoxContent = styled.div`\n  display: flex;\n  align-items: start;\n  justify-content: space-around;\n  text-align: start;\n`;\n\nconst Name = styled.h3`\n  font-family: ${fonts.primary};\n  font-weight: 700;\n  margin-bottom: 12px;\n  font-size: 12px;\n  line-height: 1.33;\n  color: ${palette.accent};\n  @media (min-width: ${screens.tablet}) {\n    font-size: 20px;\n    line-height: 1.35;\n  } ;\n`;\n\nconst NameLink = styled.a`\n  font-family: inherit;\n  font-weight: inherit;\n  margin-bottom: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  color: inherit;\n`;\n\nconst WorkDaysList = styled.ul`\n  visibility: hidden;\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  transform: translate(0, 100%);\n\n  background-color: ${backgrounds.secondary};\n  border: 1px solid ${palette.accent};\n  border-radius: 8px;\n  box-shadow: ${shadows.card};\n  padding: 12px;\n`;\n\nconst InfoBox = styled.div`\n  position: relative;\n`;\n\nconst InfoTitle = styled.p`\n  font-family: ${fonts.primary};\n  font-weight: 500;\n  font-size: 12px;\n  line-height: 1.37;\n  transition: color 250ms;\n  &:hover {\n    color: ${palette.accent};\n    cursor: pointer;\n  }\n\n  @media (min-width: ${screens.tablet}) {\n    font-size: 14px;\n    line-height: 1.36;\n  }\n  @media (min-width: ${screens.desktop}) {\n    font-size: 16px;\n    line-height: 1.38;\n  }\n`;\n\nconst InfoLinks = styled.a`\n  font-family: inherit;\n  line-height: inherit;\n  text-decoration: none;\n  color: inherit;\n`;\n\nconst InfoAddress = styled.a`\n  font-family: inherit;\n  line-height: inherit;\n  text-decoration: underline;\n  color: inherit;\n`;\n\nconst WorkDaysItem = styled.li`\n  font-family: ${fonts.primary};\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.33;\n  &:not(:last-child) {\n    margin-bottom: 4px;\n  }\n`;\n\nconst WorkDaysTime = styled.span`\n  margin-left: 12px;\n`;\n\nconst StyledComponents = {\n  Card,\n  List,\n  BoxContent,\n  Name,\n  WorkDaysList,\n  InfoTitle,\n  InfoBox,\n  InfoLinks,\n  InfoAddress,\n  CardPic,\n  WorkDaysItem,\n  WorkDaysTime,\n  NameLink,\n};\n\nexport default StyledComponents;\n","import PropTypes from 'prop-types';\nimport StyledComponents from './OurFriendsCards.styled';\n\nconst {\n  Card,\n  List,\n  BoxContent,\n  Name,\n  WorkDaysList,\n  InfoTitle,\n  InfoBox,\n  InfoLinks,\n  InfoAddress,\n  CardPic,\n  WorkDaysItem,\n  WorkDaysTime,\n  NameLink,\n} = StyledComponents;\n\nconst OurFriendsCards = ({ showWorkdays, friends }) => {\n  const weekDays = ['MN', 'TU', 'WE', 'TH', 'FR', 'SA', 'SU'];\n\n  return (\n    <List>\n      {friends.map((el, idx) => {\n        const { title, url, addressUrl, imageUrl, address, workDays, phone, email } = el;\n\n        const isWorkDays = workDays && workDays.length > 0;\n\n        return (\n          <Card key={idx}>\n            <Name>\n              <NameLink href={url || '#'} target=\"_blank\">\n                {title}\n              </NameLink>\n            </Name>\n            <BoxContent>\n              {imageUrl ? <CardPic src={imageUrl} alt={title + ' logo'} /> : false}\n              <div>\n                <InfoBox onClick={showWorkdays}>\n                  <InfoTitle>\n                    Time: <br />\n                    {isWorkDays\n                      ? [workDays.find(day => day.isOpen === true)].map(time => {\n                          return `${time.from}- ${time.to}`;\n                        })\n                      : '-----------------------------------'}\n                  </InfoTitle>\n\n                  {isWorkDays ? (\n                    <WorkDaysList>\n                      {workDays.map((item, index) => {\n                        if (item.isOpen) {\n                          return (\n                            <WorkDaysItem key={index}>\n                              {`${weekDays[index]}`}\n                              <WorkDaysTime>{`${item.from}- ${item.to}`}</WorkDaysTime>\n                            </WorkDaysItem>\n                          );\n                        }\n                        return true;\n                      })}\n                    </WorkDaysList>\n                  ) : (\n                    false\n                  )}\n                </InfoBox>\n\n                <InfoTitle>\n                  Adress: <br />\n                  {address ? (\n                    <InfoAddress href={addressUrl || '#'} target=\"_blank\">\n                      {address}\n                    </InfoAddress>\n                  ) : (\n                    '-----------------------------------'\n                  )}\n                </InfoTitle>\n\n                <InfoTitle>\n                  Email: <br />\n                  <InfoLinks href={email ? 'mailto:' + email : '#'} target=\"_blank\">\n                    {email || '-----------------------------------'}\n                  </InfoLinks>\n                </InfoTitle>\n\n                <InfoTitle>\n                  Phone: <br />\n                  <InfoLinks href={phone ? 'tel:' + phone : '#'} target=\"_blank\">\n                    {phone || '-----------------------------------'}\n                  </InfoLinks>\n                </InfoTitle>\n              </div>\n            </BoxContent>\n          </Card>\n        );\n      })}\n    </List>\n  );\n};\n\nOurFriendsCards.propTypes = {\n  showWorkdays: PropTypes.func.isRequired,\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      url: PropTypes.string,\n      addressUrl: PropTypes.string,\n      imageUrl: PropTypes.string,\n      address: PropTypes.string,\n      workDays: PropTypes.arrayOf(\n        PropTypes.shape({\n          isOpen: PropTypes.bool,\n          from: PropTypes.string,\n          to: PropTypes.string,\n        })\n      ),\n      phone: PropTypes.string,\n      email: PropTypes.string,\n    })\n  ),\n};\n\nexport default OurFriendsCards;\n","import { Container } from 'helpers';\nimport OurFriendsTitle from 'components/OurFriendsTitle';\nimport OurFriendsCards from 'components/OurFriendsCards';\nimport { useFriends } from 'hooks';\n\nconst OurFriendsPage = () => {\n  const showWorkDays = e => {\n    const elementChidren = e.currentTarget.children;\n    if (!elementChidren[1]) return;\n\n    if (elementChidren[1].style.visibility === 'visible') {\n      elementChidren[1].style.visibility = 'hidden';\n      return;\n    }\n\n    elementChidren[1].style.visibility = 'visible';\n  };\n\n  const friends = useFriends();\n\n  return (\n    <Container>\n      <OurFriendsTitle />\n      <OurFriendsCards showWorkdays={showWorkDays} friends={friends} />\n    </Container>\n  );\n};\n\nexport default OurFriendsPage;\n"],"names":["useNotices","result","categoryName","page","limit","isLogged","useSelector","selectAuthToken","isOwn","isFavorite","isByCategory","byCategoryNotices","useListNoticesByCategoryQuery","category","skip","refetchOnMountOrArgChange","data","notices","ownNotices","useListUserNoticesQuery","favoriteNotices","favorite","useGetNoticeById","noticeId","useGetNoticesByIdQuery","notice","useNews","query","useListNewsQuery","isLoading","news","useFriends","useListFriendsQuery","friends","fonts","theme","screens","Title","styled","primary","tablet","desktop","StyledComponents","backgrounds","shadows","palette","Card","secondary","card","CardPic","List","BoxContent","Name","accent","NameLink","WorkDaysList","InfoBox","InfoTitle","InfoLinks","InfoAddress","WorkDaysItem","WorkDaysTime","showWorkdays","weekDays","map","el","idx","title","url","addressUrl","imageUrl","address","workDays","phone","email","isWorkDays","length","href","target","src","alt","onClick","find","day","isOpen","time","from","to","item","index","e","elementChidren","currentTarget","children","style","visibility"],"sourceRoot":""}
{"version":3,"file":"static/js/839.96e43529.chunk.js","mappings":"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","sources":["components/NoticesCategoriesNav/NoticesCategoriesNav.styled.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","hooks/useNoticesByCategory.js","components/FavoriteButton/FavoriteButton.styled.jsx","components/FavoriteButton/FavoriteButton.jsx","components/DeleteButton/DeleteButton.styled.jsx","components/DeleteButton/DeleteButton.jsx","components/PopUp/PopUp.styled.jsx","components/PopUp/PopUp.jsx","components/ConfirmButtons/ConfirmButtons.styled.jsx","components/ConfirmButtons/ConfirmButtons.jsx","components/NoticeCategoryItem/NoticeCategoryItem.styled.jsx","components/NoticeCategoryItem/NoticeCategoryItem.jsx","components/NoticesCategoriesList/NoticesCategoriesList.styled.jsx","components/NoticesCategoriesList/NoticesCategoriesList.jsx","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 30px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    position: static;\n    overflow: hidden;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const NavLinksContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const NavLinks = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 28px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.357;\n  color: ${({ theme }) => theme.palette.primary};\n\n  background-color: ${({ theme }) => theme.backgrounds.secondary};\n  border: 2px solid ${({ theme }) => theme.palette.accent};\n  border-radius: 40px;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.triadic};\n    background-color: ${({ theme }) => theme.palette.accent};\n  }\n\n  &:hover,\n  &:focus {\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const AddButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: -188px;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  z-index: 10;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    position: static;\n    z-index: 1;\n  }\n`;\n\nexport const AddButtonLabel = styled.p`\n  display: none;\n  margin-right: 12px;\n\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.35;\n  text-transform: capitalize;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-block;\n  }\n`;\n\nexport const AddButtonSpan = styled.span`\n  display: inline-block;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.35;\n  text-transform: capitalize;\n\n  color: ${({ theme }) => theme.palette.triadic};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: none;\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  padding: 0;\n\n  color: ${({ theme }) => theme.palette.triadic};\n\n  background-color: ${({ theme }) => theme.palette.accent};\n  border: none;\n  border-radius: 50%;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 44px;\n    height: 44px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const AddButtonIcon = styled.svg`\n  width: 22px;\n  height: 22px;\n  fill: currentColor;\n  stroke: currentColor;\n  margin-bottom: 6px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 16px;\n    height: 16px;\n    margin-bottom: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport { useParams } from 'react-router-dom';\n\nimport { constants } from 'constants/constants';\n\nimport {\n  AddButton,\n  AddButtonContainer,\n  AddButtonIcon,\n  AddButtonLabel,\n  NavContainer,\n  NavLinksContainer,\n  NavLinks,\n  Link,\n  AddButtonSpan,\n} from './NoticesCategoriesNav.styled';\n\nconst { icons } = constants;\n\nconst {\n  categories: { publicCategories, privateCategories },\n} = constants;\n\nconst NoticesCategoriesNav = () => {\n  const { categoryName } = useParams();\n\n  const isLogged = useSelector(selectAuthToken);\n\n  return (\n    <NavContainer>\n      <NavLinksContainer>\n        {publicCategories.map(([category, name], index) => (\n          <Link\n            className={categoryName === category ? 'active' : ''}\n            to={`/notices/${category}`}\n            key={name + index}\n          >\n            {name}\n          </Link>\n        ))}\n        {isLogged && (\n          <NavLinks>\n            {privateCategories.map(([category, name], index) => (\n              <Link\n                className={categoryName === category ? 'active' : ''}\n                to={`/notices/${category}`}\n                key={name + index}\n              >\n                {name}\n              </Link>\n            ))}\n          </NavLinks>\n        )}\n      </NavLinksContainer>\n      <AddButtonContainer>\n        <AddButtonLabel>add pet</AddButtonLabel>\n        <AddButton>\n          <AddButtonIcon>\n            <use href={`${icons}#icon-plus`} />\n          </AddButtonIcon>\n          <AddButtonSpan>add pet</AddButtonSpan>\n        </AddButton>\n      </AddButtonContainer>\n    </NavContainer>\n  );\n};\n\nNoticesCategoriesNav.propTypes = {\n  active: PropTypes.bool,\n};\n\nexport default NoticesCategoriesNav;\n","import { useListNoticesByCategoryQuery } from 'redux/notices';\n// import { useSelector } from 'react-redux';\n// import { selectAuthToken } from 'redux/authState';\n\nconst useNoticesByCategory = ({ category, page = 1 }) => {\n  // const isLogged = useSelector(selectAuthToken);\n  const { data } = useListNoticesByCategoryQuery(\n    { category, page },\n    {\n      // skip: !isLogged,\n      refetchOnMountOrArgChange: true,\n    }\n  );\n\n  return data?.data?.notices ?? [];\n};\n\nexport { useNoticesByCategory };\n","import styled from '@emotion/styled';\n\nexport const FavButton = styled.button`\n  position: relative;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 44px;\n  height: 44px;\n  margin-bottom: 12px;\n\n  color: ${({ favorite, theme }) =>\n    favorite === true ? theme.palette.accent : theme.backgrounds.whiteTranslucent};\n  background-color: ${({ theme }) => theme.backgrounds.whiteTranslucent};\n  backdrop-filter: blur(2px);\n  border: none;\n  border-radius: 50%;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.hoverAccent};\n    transform: ${({ theme }) => theme.animations.transform};\n    & svg {\n      stroke: ${({ theme }) => theme.palette.hoverAccent};\n    }\n  }\n`;\n\nexport const FavIcon = styled.svg`\n  width: 24px;\n  height: 22px;\n\n  fill: currentColor;\n  stroke: ${({ theme }) => theme.palette.accent};\n`;\n","import PropTypes from 'prop-types';\nimport { constants } from 'constants/constants';\nimport { FavButton, FavIcon } from './FavoriteButton.styled';\n\nconst { icons } = constants;\n\nconst FavoriteButton = ({ favorite, toggleFavorite, title }) => {\n  return (\n    <FavButton favorite={favorite} type=\"button\" title={title} onClick={toggleFavorite}>\n      <FavIcon aria-label=\"In Favorites\">\n        <use href={`${icons}#icon-heart-outlined`} />\n      </FavIcon>\n    </FavButton>\n  );\n};\n\nFavoriteButton.propTypes = {\n  favorite: PropTypes.bool.isRequired,\n  toggleFavorite: PropTypes.func.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nexport default FavoriteButton;\n","import styled from '@emotion/styled';\n\nexport const DelButton = styled.button`\n  position: relative;\n  padding: 0;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 0;\n  width: 44px;\n  height: 44px;\n\n  color: rgba(17, 17, 17, 0.6);\n\n  background-color: ${({ translucent, theme }) =>\n    translucent === true ? theme.backgrounds.whiteTranslucent : theme.backgrounds.primary};\n  backdrop-filter: blur(2px);\n  border: none;\n  border-radius: 50%;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.hoverAccent};\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const DelIcon = styled.svg`\n  width: 19.5;\n  height: 21px;\n\n  fill: currentColor;\n`;\n","import PropTypes from 'prop-types';\nimport { DelButton, DelIcon } from './DeleteButton.styled';\nimport { constants } from 'constants/constants';\n\nconst { icons } = constants;\n\nconst DeleteButton = ({ translucent = false, title = '', onDelete }) => {\n  return (\n    <DelButton type=\"button\" translucent={translucent} title={title} onClick={onDelete}>\n      <DelIcon aria-label=\"Delete icon\">\n        <use href={`${icons}#icon-trashcan`} />\n      </DelIcon>\n    </DelButton>\n  );\n};\n\nDeleteButton.propTypes = {\n  translucent: PropTypes.bool,\n  title: PropTypes.string,\n  onDelete: PropTypes.func.isRequired,\n};\n\nexport default DeleteButton;\n","import styled from '@emotion/styled';\n\nexport const PopUpContainer = styled.div`\n  position: absolute;\n  right: 54px;\n  top: 10px;\n\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 12px;\n  width: 200px;\n  max-width: 200px;\n\n  background-color: rgba(17, 17, 17, 0.8);\n  backdrop-filter: blur(2px);\n\n  border: none;\n  border-radius: 40px;\n  border-top-right-radius: 0;\n\n  box-shadow: 0 0 20px ${({ theme }) => theme.palette.hoverAccent};\n\n  z-index: 20;\n`;\n\nexport const Message = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 20px;\n\n  text-align: center;\n\n  color: ${({ theme }) => theme.palette.accent};\n`;\n\nexport const CloseButton = styled.button`\n  padding: 4px;\n  width: 20px;\n  height: 20px;\n  margin-left: auto;\n  margin-bottom: 20px;\n\n  color: ${({ theme }) => theme.palette.triadic};\n  background: transparent;\n  border: none;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.hoverAccent};\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const CloseIcon = styled.svg`\n  width: 100%;\n  height: 100%;\n\n  fill: currentColor;\n`;\n","import PropTypes from 'prop-types';\nimport { constants } from 'constants/constants';\n\nimport { PopUpContainer, Message, CloseButton, CloseIcon } from './PopUp.styled';\n\nconst { icons } = constants;\n\nconst PopUp = ({ message = '', onClose, children }) => {\n  return (\n    <PopUpContainer>\n      <CloseButton type=\"button\" title=\"Close\" onClick={onClose}>\n        <CloseIcon aria-label=\"Close icon\">\n          <use href={`${icons}#icon-close`} />\n        </CloseIcon>\n      </CloseButton>\n      <Message>{message}</Message>\n      {children}\n    </PopUpContainer>\n  );\n};\n\nPopUp.propTypes = {\n  message: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default PopUp;\n","import styled from '@emotion/styled';\n\nexport const ConfirmButtonsContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const ConfirmButton = styled.button`\n  padding: 8px;\n\n  font-size: inherit;\n  font-weight: 500;\n\n  color: ${({ theme }) => theme.palette.accent};\n  border: 2px solid ${({ theme }) => theme.palette.accent};\n  border-radius: 20px;\n  background: transparent;\n\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:hover,\n  &:focus {\n    background-color: ${({ theme }) => theme.palette.hoverAccent};\n    color: ${({ theme }) => theme.palette.triadic};\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { ConfirmButtonsContainer, ConfirmButton } from './ConfirmButtons.styled';\n\nconst ConfirmButtons = ({ onClickYes, onClickNo }) => {\n  return (\n    <ConfirmButtonsContainer>\n      <ConfirmButton type=\"button\" title=\"Confirm\" onClick={onClickYes}>\n        Yes\n      </ConfirmButton>\n      <ConfirmButton type=\"button\" title=\"Deny\" onClick={onClickNo}>\n        No\n      </ConfirmButton>\n    </ConfirmButtonsContainer>\n  );\n};\n\nConfirmButtons.propTypes = {\n  onClickYes: PropTypes.func.isRequired,\n  onClickNo: PropTypes.func.isRequired,\n};\n\nexport default ConfirmButtons;\n","import styled from '@emotion/styled';\n\nexport const ItemContainer = styled.li`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n  padding-bottom: 32px;\n\n  background-color: ${({ theme }) => theme.backgrounds.secondary};\n  border: none;\n  border-radius: 0px 0px 20px 20px;\n\n  box-shadow: ${({ theme }) => theme.shadows.card};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 336px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 288px;\n  }\n`;\n\nexport const ItemImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const CategoryLabel = styled.p`\n  position: absolute;\n  display: flex;\n  align-items: center;\n  top: 20px;\n  left: 0;\n  width: 158px;\n  height: 28px;\n  padding-left: 20px;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.334;\n\n  background-color: ${({ theme }) => theme.backgrounds.whiteTranslucent};\n  backdrop-filter: blur(2px);\n  border: none;\n  border-top-right-radius: 14px;\n  border-bottom-right-radius: 14px;\n`;\n\nexport const Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 20px 0 20px;\n  width: 100%;\n  margin-bottom: 50px;\n`;\n\nexport const InfoDescription = styled.ul`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n\nexport const InfoDescriptionItem = styled.li`\n  display: flex;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nexport const InfoTitle = styled.h3`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.357;\n  letter-spacing: -0.01em;\n  margin-bottom: 20px;\n`;\n\nexport const InfoText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.375;\n`;\n\nexport const UserButtons = styled.div`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n`;\n","import PropTypes from 'prop-types';\nimport { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport { imageURLBuilder, ownerCheck } from 'helpers';\nimport { constants } from 'constants/constants';\nimport FavoriteButton from 'components/FavoriteButton';\nimport DeleteButton from 'components/DeleteButton';\nimport PopUp from 'components/PopUp';\nimport ConfirmButtons from 'components/ConfirmButtons';\nimport {\n  ItemContainer,\n  ItemImage,\n  Info,\n  InfoTitle,\n  InfoDescription,\n  InfoDescriptionItem,\n  InfoText,\n  CategoryLabel,\n  UserButtons,\n} from './NoticeCategoryItem.styled';\n\nconst {\n  categories: { publicCategories },\n} = constants;\n\nconst userId = '636e250a3fc8cdfd9b8f0cba'; // hardcode to remove\n\nconst NoticeCategoryItem = ({\n  _id,\n  imageURL,\n  title,\n  breed,\n  location,\n  birthday,\n  category,\n  favorite,\n  owner,\n}) => {\n  const [favoriteState, setFavoriteState] = useState(favorite);\n  const [showNotLogged, setShowNotLogged] = useState(false);\n  const [showDeleteConfirm, setShowDeleteConfirm] = useState(false);\n\n  const isLogged = useSelector(selectAuthToken);\n\n  const toggleFavorite = () => {\n    if (!isLogged) {\n      setShowNotLogged(true);\n      return;\n    }\n    setFavoriteState(favoriteState => !favoriteState);\n  };\n\n  const removeNotice = ({ noticeId }) => {\n    console.log(noticeId);\n    setShowDeleteConfirm(false);\n  };\n\n  const categoryName = publicCategories.find(item => item[0] === category)[1];\n  return (\n    <ItemContainer>\n      <CategoryLabel>{categoryName}</CategoryLabel>\n      <UserButtons>\n        <FavoriteButton\n          favorite={favoriteState}\n          type=\"button\"\n          title={`${favorite ? 'Remove from' : 'Add to'} favorites`}\n          toggleFavorite={toggleFavorite}\n        />\n        {ownerCheck({ userId, noticeOwner: owner }) && (\n          <DeleteButton\n            type=\"button\"\n            title=\"Remove your notice\"\n            translucent\n            onDelete={() => setShowDeleteConfirm(true)}\n          ></DeleteButton>\n        )}\n        {showDeleteConfirm && (\n          <PopUp message=\"Are you sure?\" onClose={() => setShowDeleteConfirm(false)}>\n            <ConfirmButtons\n              onClickYes={() => removeNotice({ noticeId: _id })}\n              onClickNo={() => setShowDeleteConfirm(false)}\n            />\n          </PopUp>\n        )}\n        {showNotLogged && (\n          <PopUp message=\"You should be logged in\" onClose={() => setShowNotLogged(false)} />\n        )}\n      </UserButtons>\n      {/* TODO: refactor image to picture with sizes */}\n      <ItemImage src={imageURL ? imageURLBuilder(imageURL?.mobile) : ''} alt={title} />\n      <Info>\n        <InfoTitle>{title}</InfoTitle>\n        <InfoDescription>\n          {/* TODO: make proper layout of Info */}\n          <InfoDescriptionItem>\n            <InfoText>Breed: {breed}</InfoText>\n          </InfoDescriptionItem>\n          <InfoDescriptionItem>\n            <InfoText>Place: {location}</InfoText>\n          </InfoDescriptionItem>\n          {/* TODO: write function to calculate age */}\n          {birthday && (\n            <InfoDescriptionItem>\n              <InfoText>Age: {birthday}</InfoText>\n            </InfoDescriptionItem>\n          )}\n        </InfoDescription>\n      </Info>\n      learn more\n      {/* TODO: insert button learn more */}\n    </ItemContainer>\n  );\n};\n\nNoticeCategoryItem.propTypes = {\n  _id: PropTypes.string.isRequired,\n  imageURL: PropTypes.shape({}),\n  title: PropTypes.string.isRequired,\n  breed: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  birthday: PropTypes.string,\n  category: PropTypes.string.isRequired,\n  favorite: PropTypes.bool.isRequired,\n  owner: PropTypes.string.isRequired,\n};\n\nexport default NoticeCategoryItem;\n","import styled from '@emotion/styled';\n\nexport const CategoriesList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 32px;\n  margin-bottom: 100px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    grid-template-columns: repeat(4, 1fr);\n    margin-bottom: 200px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport { useNoticesByCategory } from 'hooks';\nimport { favoriteCheck } from 'helpers';\nimport NoticeCategoryItem from 'components/NoticeCategoryItem';\n\nimport { CategoriesList } from './NoticesCategoriesList.styled';\n\nconst NoticesCategoriesList = () => {\n  const { categoryName } = useParams();\n  const userId = '636e250a3fc8cdfd9b8f0cba'; // hardcode to remove\n  const notices = useNoticesByCategory({ category: categoryName });\n\n  return (\n    <CategoriesList>\n      {notices.map(({ _id, imageURL, title, breed, birthday, location, favorite, owner }) => (\n        <NoticeCategoryItem\n          _id={_id}\n          imageURL={imageURL}\n          title={title}\n          breed={breed}\n          birthday={birthday}\n          location={location}\n          key={_id}\n          category={categoryName}\n          favorite={favoriteCheck({ userId, favorite })}\n          owner={owner._id}\n        />\n      ))}\n    </CategoriesList>\n  );\n};\n\nexport default NoticesCategoriesList;\n","import NoticesCategoriesNav from 'components/NoticesCategoriesNav';\n// import { useSelector } from 'react-redux';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList';\nimport { Container } from 'helpers';\n\nconst NoticesPage = () => {\n  return (\n    <Container>\n      <NoticesCategoriesNav />\n      <NoticesCategoriesList />\n    </Container>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["NavContainer","styled","theme","screens","tablet","NavLinksContainer","desktop","NavLinks","Link","NavLink","palette","primary","backgrounds","secondary","accent","animations","transition","triadic","transform","AddButtonContainer","AddButtonLabel","AddButtonSpan","AddButton","AddButtonIcon","icons","constants","publicCategories","privateCategories","categoryName","useParams","isLogged","useSelector","selectAuthToken","map","index","category","name","className","to","href","useNoticesByCategory","page","data","useListNoticesByCategoryQuery","refetchOnMountOrArgChange","notices","FavButton","favorite","whiteTranslucent","hoverAccent","FavIcon","toggleFavorite","title","type","onClick","DelButton","translucent","DelIcon","onDelete","PopUpContainer","Message","CloseButton","CloseIcon","message","onClose","children","ConfirmButtonsContainer","ConfirmButton","onClickYes","onClickNo","ItemContainer","shadows","card","ItemImage","CategoryLabel","Info","InfoDescription","InfoDescriptionItem","InfoTitle","InfoText","UserButtons","_id","imageURL","breed","location","birthday","owner","useState","favoriteState","setFavoriteState","showNotLogged","setShowNotLogged","showDeleteConfirm","setShowDeleteConfirm","find","item","ownerCheck","userId","noticeOwner","noticeId","console","log","removeNotice","src","imageURLBuilder","mobile","alt","CategoriesList","favoriteCheck"],"sourceRoot":""}
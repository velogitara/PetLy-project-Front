{"version":3,"file":"static/js/516.56ceeb0e.chunk.js","mappings":"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","sources":["components/UserPageComponents/UserProfile/UserProfile.styled.jsx","components/UserPageComponents/UserProfileInfoField/UserProfileInfoField.styled.jsx","components/UserPageComponents/UserProfileInfoField/UserProfileInfoField.jsx","components/UserPageComponents/UserProfileAvatar/UserProfileAvatar.styled.jsx","components/UserPageComponents/UserProfileAvatar/UserProfileAvatar.jsx","components/UserPageComponents/UserLogout/UserLogout.styled.jsx","components/UserPageComponents/UserLogout/UserLogout.jsx","components/UserPageComponents/UserProfile/UserProfile.jsx","components/UserPageComponents/UserHeader/UserHeader.styled.jsx","components/UserPageComponents/UserHeader/UserHeader.jsx","components/UserPageComponents/PetGallery/PetGallery.styled.jsx","components/UserPageComponents/PetCard/PetCard.styled.jsx","components/UserPageComponents/PetCard/PetCard.jsx","components/UserPageComponents/PetGallery/PetGallery.jsx","components/UserPageComponents/AddPet/AddPet.styled.jsx","components/UserPageComponents/AddPet/AddPet.jsx","pages/UserPage/UserPage.styled.jsx","pages/UserPage/UserPage.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const UserContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 20px 14px;\n  margin-bottom: 40px;\n  border-radius: 20px;\n  color: inherit;\n  background: ${({ theme }) => theme.palette.triadic};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    position: relative;\n    margin-bottom: 20px;\n    padding: 24px 40px 24px 0;\n    min-width: calc((100vw - 704px) / 2 + 704px);\n    border-radius: 0px 40px 40px 0px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    margin-bottom: 0;\n    padding: 20px 16px 103px 0;\n    min-width: calc(100vw - (100vw - 1247px) / 2 - 853px);\n  }\n`;\n\nexport const UserProfileForm = styled.div`\n  display: flex;\n  align-items: center;\n\n  @media screen and (max-width: ${({ theme }) => theme.screens.toDesktop}) {\n    margin-left: auto;\n    flex-direction: row-reverse;\n  }\n\n  @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n    flex-direction: column;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: column;\n    margin-left: auto;\n  }\n`;\n\nexport const UserProfileInfo = styled.div`\n  @media screen and (max-width: ${({ theme }) => theme.screens.toDesktop}) {\n    margin-right: 52px;\n  }\n  @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n    margin-right: 0;\n  }\n`;\n\nexport const UserLogout = styled(Link)`\n  text-decoration: none;\n  display: flex;\n`;\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\n\nconst Container = ({ theme }) => css`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:not(:last-child) {\n    margin-bottom: 4px;\n\n    @media screen and (min-width: ${theme.screens.tablet}) {\n      margin-bottom: 8px;\n    }\n  }\n`;\n\nexport const InfoContainer = styled.div`\n  ${Container}\n`;\n\nexport const InfoForm = styled.form`\n  ${Container}\n`;\n\nexport const InfoLabel = styled.label`\n  margin-right: 8px;\n  width: 56px;\n\n  font-weight: 500;\n  font-size: 12px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    font-size: 18px;\n    width: 83px;\n    margin-right: 24px;\n  }\n`;\n\nexport const InfoInput = styled.input`\n  width: 159px;\n  height: 24px;\n  padding: 4px 18px;\n  line-height: 1.33;\n  margin-right: 9px;\n\n  border: 1px solid rgba(245, 146, 86, 0.5);\n  border-radius: 40px;\n\n  font-weight: 500;\n  font-size: 12px;\n\n  &:hover,\n  &:focus {\n    outline: none;\n  }\n\n  &.edit {\n    background-color: ${({ theme }) => theme.backgrounds.primary};\n  }\n\n  &.non-edit {\n    background-color: none;\n    border: transparent;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 216px;\n    height: 32px;\n    padding: 4px 12px;\n    margin-right: 24px;\n    font-size: 18px;\n    line-height: 1.38;\n  }\n`;\n\nexport const InfoButton = styled.button`\n  background: #fdf7f2;\n  backdrop-filter: blur(2px);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 5px;\n  border-radius: 20px;\n  width: 20px;\n  height: 20px;\n  border: none;\n  cursor: pointer;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 32px;\n    height: 32px;\n    padding: 8px;\n  }\n`;\n\nexport const SvgCheck = styled.svg`\n  fill: ${({ theme }) => theme.palette.accent};\n  width: 100%;\n  height: 100%;\n`;\n\nexport const SvgEdit = styled.svg`\n  fill: ${({ theme }) => theme.palette.accent};\n  width: 100%;\n  height: 100%;\n\n  button:disabled & {\n    fill: ${({ theme }) => theme.backgrounds.backdrop};\n  }\n`;\n","import {\n  InfoContainer,\n  InfoForm,\n  InfoLabel,\n  InfoInput,\n  InfoButton,\n  SvgCheck,\n  SvgEdit,\n} from './UserProfileInfoField.styled';\nimport { useUpdateUserInfoMutation } from 'redux/user';\nimport PropTypes from 'prop-types';\nimport icons from '../../../assets/icons/icons.svg';\nimport { useEffect, useState } from 'react';\n\nconst UserProfileInfoField = ({ id, label, text, isEditing, onFieldEddited }) => {\n  const [isInEditMode, setIsInEditMode] = useState(false);\n  const [value, setValue] = useState('');\n  const [updateUserInfo /* { isLoading, isError }*/] = useUpdateUserInfoMutation();\n\n  useEffect(() => {\n    setValue(text);\n  }, [text]);\n\n  const onEditButtonClick = () => {\n    setIsInEditMode(true);\n    onFieldEddited(true);\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    const user = { [id]: value };\n    const parsedData = JSON.stringify(user);\n\n    updateUserInfo({ data: parsedData });\n\n    onFieldEddited(false);\n    setIsInEditMode(false);\n\n    // const parsedData = JSON.stringify(user);\n    // const fd = new FormData();\n    // fd.append('data', parsedData);\n\n    // updateUserInfo(fd);\n  };\n\n  const handleInputChange = e => {\n    const { value } = e.currentTarget;\n    setValue(value);\n  };\n\n  return (\n    <>\n      {isInEditMode ? (\n        <InfoForm onSubmit={handleFormSubmit}>\n          <InfoLabel htmlFor={label}>{label}</InfoLabel>\n          <InfoInput\n            type=\"text\"\n            id={label}\n            name={label}\n            readOnly={!isInEditMode}\n            className={'edit'}\n            value={value}\n            onChange={handleInputChange}\n          />\n          <InfoButton type=\"submit\">\n            <SvgCheck>\n              <use href={`${icons}#icon-check`}></use>\n            </SvgCheck>\n          </InfoButton>\n        </InfoForm>\n      ) : (\n        <InfoContainer>\n          <InfoLabel htmlFor={label}>{label}</InfoLabel>\n          <InfoInput\n            type=\"text\"\n            id={label}\n            name={label}\n            readOnly={!isInEditMode}\n            className={'non-edit'}\n            value={value}\n          />\n          <InfoButton\n            type=\"button\"\n            onClick={onEditButtonClick}\n            disabled={!isInEditMode && isEditing}\n          >\n            <SvgEdit>\n              <use href={`${icons}#icon-pensil`}></use>\n            </SvgEdit>\n          </InfoButton>\n        </InfoContainer>\n      )}\n    </>\n  );\n};\n\nexport default UserProfileInfoField;\n\nUserProfileInfoField.propTypes = {\n  user: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    text: PropTypes.any.isRequired,\n    isEditing: PropTypes.bool.isRequired,\n    onFieldEddited: PropTypes.any.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const AvatarContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  width: fit-content;\n  margin-bottom: 32px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    margin-bottom: 0;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n    align-items: flex-end;\n    margin-bottom: 36px;\n    margin-right: -84px;\n  }\n`;\n\nexport const ImageContainer = styled.div`\n  width: 233px;\n  height: 233px;\n  margin-bottom: 12px;\n\n  background-color: ${({ theme }) => theme.backgrounds.backdrop};\n  border-radius: 50%;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    margin-bottom: 8px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    margin-bottom: 0;\n  }\n`;\n\nexport const ImageLabel = styled.label`\n  display: flex;\n  align-items: center;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    transform: translateX(-12px);\n  }\n`;\n\nexport const ImageInput = styled.input`\n  display: none;\n`;\n\nexport const SvgIcon = styled.svg`\n  width: 20px;\n  height: 20px;\n  margin-right: 4px;\n\n  fill: ${({ theme }) => theme.palette.accent};\n`;\n\nexport const InputText = styled.p`\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.83;\n`;\n","import {\n  AvatarContainer,\n  ImageContainer,\n  ImageLabel,\n  ImageInput,\n  SvgIcon,\n  InputText,\n} from './UserProfileAvatar.styled';\nimport { useUpdateUserInfoMutation } from 'redux/user';\nimport icons from '../../../assets/icons/icons.svg';\n\nconst UserProfileAvatar = ({ isEditing, onFieldEdited }) => {\n  const [updateUserInfo /* { isLoading, isError }*/] = useUpdateUserInfoMutation();\n\n  const handleInputChange = e => {\n    e.preventDefault();\n    const file = e.target.files[0];\n    updateUserInfo({ file });\n    // const file = e.target.files[0];\n    // const fd = new FormData();\n    // fd.append('image', file);\n    // updateUserInfo(fd);\n  };\n\n  return (\n    <AvatarContainer>\n      <ImageContainer>\n        <img src=\"\" alt=\"\" />\n      </ImageContainer>\n      <ImageLabel htmlFor=\"avatar\">\n        <SvgIcon>\n          <use href={`${icons}#icon-camera`}></use>\n        </SvgIcon>\n        <InputText>Edit photo</InputText>\n      </ImageLabel>\n      <ImageInput id=\"avatar\" type=\"file\" disabled={isEditing} onChange={handleInputChange} />\n    </AvatarContainer>\n  );\n};\n\nexport default UserProfileAvatar;\n","// import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const LogoutButton = styled.button`\n  text-decoration: none;\n  display: flex;\n  margin-left: auto;\n  margin-top: 40px;\n  border: none;\n  background: none;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    position: absolute;\n    bottom: 24px;\n    right: 620px;\n    margin: 0;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    position: absolute;\n    bottom: 40px;\n    right: 310px;\n  }\n`;\n\nexport const SvgIcon = styled.svg`\n  width: 18px;\n  height: 18px;\n  margin-right: 8px;\n\n  fill: ${({ theme }) => theme.palette.accent};\n  stroke: ${({ theme }) => theme.palette.accent};\n`;\n\nexport const LogoutText = styled.p`\n  font-weight: 500;\n  font-size: 16px;\n  color: ${({ theme }) => theme.backgrounds.backdrop};\n`;\n","import { LogoutButton, SvgIcon, LogoutText } from './UserLogout.styled';\nimport icons from '../../../assets/icons/icons.svg';\nimport { useSelector } from 'react-redux';\nimport { selectAuthId } from 'redux/authState';\n\nimport { useSignOutMutation } from '../../../redux/authState/authSlice';\n\nconst UserCard = () => {\n  const authId = useSelector(selectAuthId);\n\n  const [logout] = useSignOutMutation(authId);\n\n  return (\n    <LogoutButton type=\"button\" onClick={logout}>\n      <SvgIcon>\n        <use href={`${icons}#icon-logout`}></use>\n      </SvgIcon>\n      <LogoutText>Log Out</LogoutText>\n    </LogoutButton>\n  );\n};\n\nexport default UserCard;\n","import { UserContainer, UserProfileInfo, UserProfileForm } from './UserProfile.styled';\nimport UserProfileInfoField from 'components/UserPageComponents/UserProfileInfoField';\nimport UserProfileAvatar from 'components/UserPageComponents/UserProfileAvatar';\nimport UserLogout from 'components/UserPageComponents/UserLogout';\nimport PropTypes from 'prop-types';\nimport { useState } from 'react';\n\nconst UserProfile = ({ user }) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const { name, email, birthday, phone, location } = user;\n\n  const onFieldEddited = value => {\n    setIsEditing(value);\n  };\n\n  return (\n    <UserContainer>\n      <UserProfileForm>\n        <UserProfileAvatar isEditing={isEditing} onFieldEddited={onFieldEddited} />\n        <UserProfileInfo>\n          <UserProfileInfoField\n            id=\"name\"\n            label=\"Name\"\n            text={name}\n            isEditing={isEditing}\n            onFieldEddited={onFieldEddited}\n          />\n          <UserProfileInfoField\n            id=\"email\"\n            label=\"Email\"\n            text={email}\n            isEditing={isEditing}\n            onFieldEddited={onFieldEddited}\n          />\n          <UserProfileInfoField\n            id=\"birthday\"\n            label=\"Birthday\"\n            text={birthday ?? '00.00.0000'}\n            isEditing={isEditing}\n            onFieldEddited={onFieldEddited}\n          />\n          <UserProfileInfoField\n            id=\"phone\"\n            label=\"Phone\"\n            text={phone}\n            isEditing={isEditing}\n            onFieldEddited={onFieldEddited}\n          />\n          <UserProfileInfoField\n            id=\"location\"\n            label=\"City\"\n            text={location}\n            isEditing={isEditing}\n            onFieldEddited={onFieldEddited}\n          />\n        </UserProfileInfo>\n      </UserProfileForm>\n      <UserLogout />\n    </UserContainer>\n  );\n};\n\nexport default UserProfile;\n\nUserProfile.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    email: PropTypes.string.isRequired,\n    birthday: PropTypes.any,\n    phone: PropTypes.string.isRequired,\n    location: PropTypes.string.isRequired,\n  }),\n};\n","import styled from '@emotion/styled';\n\nexport const Header = styled.h2`\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 1.36;\n\n  &.information {\n    margin-bottom: 18px;\n    @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n      margin-bottom: 24px;\n    }\n  }\n\n  &.pets {\n    margin-bottom: 24px;\n  }\n\n  &.user {\n    @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n      width: 280px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n      width: 394px;\n      margin-left: auto;\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    font-size: 28px;\n    line-height: 1.43;\n  }\n`;\n","import { Header } from './UserHeader.styled';\n\nconst UserHeader = ({ text, className = '' }) => {\n  return <Header className={className}>{text}</Header>;\n};\n\nexport default UserHeader;\n","import styled from '@emotion/styled';\n\nexport const GalleryContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n`;\n","import styled from '@emotion/styled';\nimport DeleteButton from 'components/DeleteButton';\n\nexport const PetContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  justify-content: start;\n  align-items: center;\n  padding: 20px;\n  border-radius: 20px;\n  color: inherit;\n  background: ${({ theme }) => theme.palette.triadic};\n  box-shadow: ${({ theme }) => theme.shadows.primary};\n\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    flex-direction: row;\n    align-items: flex-start;\n    border-radius: 40px;\n    position: relative;\n  }\n`;\n\nexport const PetImageContainer = styled.div`\n  width: 240px;\n  height: 240px;\n  background-color: grey;\n  border-radius: 20px;\n  margin-bottom: 16px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    border-radius: 40px;\n    max-width: 161px;\n    height: 161px;\n    margin-bottom: 0;\n    margin-right: 32px;\n  }\n\n  & > img {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  }\n`;\n\nexport const PetInfo = styled.div`\n  width: fit-content;\n`;\n\nexport const PetField = styled.p`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.57;\n  margin-right: auto;\n\n  &:not(:last-child) {\n    margin-bottom: 12px;\n  }\n\n  &.delete {\n    margin: 0;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    font-weight: 400;\n    font-size: 16px;\n  }\n`;\n\nexport const PetDelete = styled.div`\n  display: flex;\n  align-items: flex-end;\n  justify-content: space-between;\n  margin-bottom: 12px;\n`;\n\nexport const PetDeleteButton = styled(DeleteButton)`\n  && {\n    @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n      width: 20px;\n      height: 20px;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n      position: absolute;\n      right: 0;\n    }\n  }\n`;\n","import {\n  PetContainer,\n  PetImageContainer,\n  PetField,\n  PetInfo,\n  PetDelete,\n  // PetDeleteButton,\n} from './PetCard.styled';\nimport DeleteButton from 'components/DeleteButton';\nimport { parseBirthday } from 'helpers';\n\nconst PetCard = ({ _id, name, birthday, breed, imageURL, comments, owner }) => {\n  // const onPetRemove = () => {};\n\n  return (\n    <PetContainer>\n      <PetImageContainer>\n        <img src={imageURL ? imageURL.mobile : ''} alt={name} />\n      </PetImageContainer>\n      <PetInfo>\n        <PetDelete>\n          <PetField className=\"delete\">Name: {name}</PetField>\n          <DeleteButton petId={_id} owner={owner} />\n        </PetDelete>\n        <PetField>Date of birth: {birthday ? parseBirthday(birthday) : '00.00.0000'}</PetField>\n        <PetField>Breed: {breed}</PetField>\n        <PetField>Comments: {comments}</PetField>\n      </PetInfo>\n    </PetContainer>\n  );\n};\n\nexport default PetCard;\n","import { GalleryContainer } from './PetGallery.styled';\nimport PetCard from 'components/UserPageComponents/PetCard';\n\nconst PetGallery = ({ pets }) => {\n  const isPets = pets.length !== 0;\n\n  return (\n    <>\n      {isPets && (\n        <GalleryContainer>\n          {pets.map(({ _id, name, birthday, breed, imageURL, comments, owner }) => (\n            <PetCard\n              key={_id}\n              _id={_id}\n              name={name}\n              birthday={birthday}\n              breed={breed}\n              imageURL={imageURL}\n              comments={comments}\n              owner={owner}\n            />\n          ))}\n          {/* <PetCard />\n      <PetCard screen={screen} /> */}\n        </GalleryContainer>\n      )}\n    </>\n  );\n};\n\nexport default PetGallery;\n","import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n`;\n\nexport const AddPetText = styled.p`\n  margin-right: 15px;\n\n  font-weight: 500;\n  font-size: 20px;\n  color: inherit;\n`;\n\nexport const AddPetLink = styled(Link)`\n  height: 40px;\n  width: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 50%;\n  background-color: ${({ theme }) => theme.palette.accent};\n`;\n\nexport const SvgIcon = styled.svg`\n  width: 16px;\n  height: 16px;\n  fill: ${({ theme }) => theme.palette.triadic};\n  stroke: ${({ theme }) => theme.palette.triadic};\n`;\n","import { Container, AddPetLink, AddPetText, SvgIcon } from './AddPet.styled';\nimport icons from '../../../assets/icons/icons.svg';\n\nconst AddPet = () => {\n  return (\n    <Container>\n      <AddPetText>Add pet</AddPetText>\n      <AddPetLink to=\"add pet\">\n        <SvgIcon>\n          <use href={`${icons}#icon-plus`}></use>\n        </SvgIcon>\n      </AddPetLink>\n    </Container>\n  );\n};\n\nexport default AddPet;\n","import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding-top: 45px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    padding-top: 20px;\n    margin-right: auto;\n    justify-content: left;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n  }\n`;\n\nexport const HeaderContainer = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 26px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    margin-bottom: 25px;\n    width: 705px;\n    margin-left: auto;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    width: 805px;\n    margin-left: 0;\n  }\n`;\n\nexport const UserContainer = styled.div``;\n\nexport const PetsContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  @media screen and (max-width: ${({ theme }) => theme.screens.toTablet}) {\n    width: 280px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 704px;\n    margin-left: auto;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    width: 821px;\n    margin-left: 32px;\n  }\n`;\n","import UserProfile from 'components/UserPageComponents/UserProfile';\nimport UserHeader from 'components/UserPageComponents/UserHeader';\nimport PetGallery from 'components/UserPageComponents/PetGallery';\nimport AddPet from 'components/UserPageComponents/AddPet';\nimport { HeaderContainer, UserContainer, PetsContainer, Container } from './UserPage.styled';\nimport { useGetCurrentUser } from 'hooks';\nimport { useEffect, useState } from 'react';\n\nconst sizes = {\n  mobile: 320,\n  tablet: 768,\n  desktop: 1280,\n};\n\nconst screens = { mobile: 'mobile', tablet: 'tablet', desktop: 'desktop' };\n\nconst UserPage = () => {\n  const { user, isLoading } = useGetCurrentUser();\n\n  const pets = [\n    {\n      _id: '637a6769dd0464a181a70aa0',\n      name: 'Bob',\n      birthday: '2022-03-01T00:00:00.000Z',\n      breed: 'labrador',\n      imageURL: null,\n      comments: 'my lovely dog',\n      owner: '6371376655714f3cabcd9df2',\n    },\n    {\n      _id: '637a6769dd0464a181a70aa4',\n      name: 'Bob',\n      birthday: '2022-03-01T00:00:00.000Z',\n      breed: 'labrador',\n      imageURL: {\n        mobile: 'pets/637a6769dd0464a181a70aa0-240x240.jpg',\n        mobile_retina: 'pets/637a6769dd0464a181a70aa0-240x240@2x.jpg',\n        tablet: 'pets/637a6769dd0464a181a70aa0-161x161.jpg',\n        tablet_retina: 'pets/637a6769dd0464a181a70aa0-161x161@2x.jpg',\n        profile: 'pets/637a6769dd0464a181a70aa0-288x328.jpg',\n        profile_retina: 'pets/637a6769dd0464a181a70aa0-288x328@2x.jpg',\n      },\n      comments: 'my lovely dog',\n      owner: '6371376655714f3cabcd9df2',\n    },\n  ];\n\n  const updateMedia = () => {\n    if (window.innerWidth >= sizes.desktop) {\n      return screens.desktop;\n    } else if (window.innerWidth >= sizes.tablet) {\n      return screens.tablet;\n    } else {\n      return screens.mobile;\n    }\n  };\n\n  const [screen, setScreen] = useState(updateMedia);\n\n  const findScreen = () => {\n    setScreen(updateMedia);\n  };\n\n  useEffect(() => {\n    window.addEventListener('resize', findScreen);\n    return () => window.removeEventListener('resize', findScreen);\n  });\n\n  return (\n    <>\n      {isLoading ? (\n        'loading...'\n      ) : (\n        <Container>\n          <UserContainer>\n            {screen === screens.tablet ? (\n              <HeaderContainer>\n                <UserHeader text=\"My information:\" className=\"user\" />\n                <AddPet />\n              </HeaderContainer>\n            ) : (\n              <UserHeader text=\"My information:\" className=\"user information\" />\n            )}\n            <UserProfile user={user} />\n          </UserContainer>\n          <PetsContainer>\n            {screen !== screens.tablet ? (\n              <HeaderContainer>\n                <UserHeader text=\"My pets:\" />\n                <AddPet />\n              </HeaderContainer>\n            ) : (\n              <UserHeader text=\"My pets:\" className=\"pets\" />\n            )}\n            <PetGallery pets={pets} />\n          </PetsContainer>\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default UserPage;\n"],"names":["UserContainer","styled","theme","palette","triadic","shadows","primary","screens","tablet","desktop","UserProfileForm","toDesktop","toTablet","UserProfileInfo","Link","Container","css","InfoContainer","InfoForm","InfoLabel","InfoInput","backgrounds","InfoButton","SvgCheck","accent","SvgEdit","backdrop","id","label","text","isEditing","onFieldEddited","useState","isInEditMode","setIsInEditMode","value","setValue","useUpdateUserInfoMutation","updateUserInfo","useEffect","onSubmit","e","preventDefault","user","parsedData","JSON","stringify","data","htmlFor","type","name","readOnly","className","onChange","currentTarget","href","icons","onClick","disabled","AvatarContainer","ImageContainer","ImageLabel","ImageInput","SvgIcon","InputText","onFieldEdited","src","alt","file","target","files","LogoutButton","LogoutText","authId","useSelector","selectAuthId","useSignOutMutation","logout","setIsEditing","email","birthday","phone","location","Header","GalleryContainer","PetContainer","PetImageContainer","PetInfo","PetField","PetDelete","DeleteButton","_id","breed","imageURL","comments","owner","mobile","petId","parseBirthday","pets","isPets","length","map","AddPetText","AddPetLink","to","HeaderContainer","PetsContainer","sizes","useGetCurrentUser","isLoading","updateMedia","window","innerWidth","screen","setScreen","findScreen","addEventListener","removeEventListener","mobile_retina","tablet_retina","profile","profile_retina"],"sourceRoot":""}
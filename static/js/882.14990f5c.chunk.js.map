{"version":3,"file":"static/js/882.14990f5c.chunk.js","mappings":"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","sources":["components/NoticesCategoriesNav/NoticesCategoriesNav.styled.jsx","components/NoticesCategoriesNav/NoticesCategoriesNav.jsx","components/NoticeCategoryItem/NoticeCategoryItem.styled.jsx","components/NoticeCategoryItem/NoticeCategoryItem.jsx","hooks/useNoticesByCategory.js","components/NoticesCategoriesList/NoticesCategoriesList.styled.jsx","components/NoticesCategoriesList/NoticesCategoriesList.jsx","pages/NoticesPage/NoticesPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const NavContainer = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  margin-bottom: 30px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    position: static;\n    overflow: hidden;\n    margin-bottom: 60px;\n  }\n`;\n\nexport const NavLinksContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.desktop}) {\n    flex-direction: row;\n    align-items: center;\n  }\n`;\n\nexport const NavLinks = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nexport const Link = styled(NavLink)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 8px 28px;\n\n  font-size: 14px;\n  font-weight: 500;\n  line-height: 1.357;\n  color: ${({ theme }) => theme.palette.primary};\n\n  background-color: ${({ theme }) => theme.backgrounds.secondary};\n  border: 2px solid ${({ theme }) => theme.palette.accent};\n  border-radius: 40px;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  &:not(:last-child) {\n    margin-right: 12px;\n  }\n\n  &.active,\n  &:hover,\n  &:focus {\n    color: ${({ theme }) => theme.palette.triadic};\n    background-color: ${({ theme }) => theme.palette.accent};\n  }\n\n  &:hover,\n  &:focus {\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const AddButtonContainer = styled.div`\n  position: absolute;\n  right: 0;\n  bottom: -188px;\n  display: flex;\n  flex-wrap: nowrap;\n  align-items: center;\n\n  z-index: 10;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    position: static;\n    z-index: 1;\n  }\n`;\n\nexport const AddButtonLabel = styled.p`\n  display: none;\n  margin-right: 12px;\n\n  font-size: 20px;\n  font-weight: 500;\n  line-height: 1.35;\n  text-transform: capitalize;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: inline-block;\n  }\n`;\n\nexport const AddButtonSpan = styled.span`\n  display: inline-block;\n\n  font-size: 12px;\n  font-weight: 500;\n  line-height: 1.35;\n  text-transform: capitalize;\n\n  color: ${({ theme }) => theme.palette.triadic};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    display: none;\n  }\n`;\n\nexport const AddButton = styled.button`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 80px;\n  height: 80px;\n  padding: 0;\n\n  color: ${({ theme }) => theme.palette.triadic};\n\n  background-color: ${({ theme }) => theme.palette.accent};\n  border: none;\n  border-radius: 50%;\n\n  transition: ${({ theme }) => theme.animations.transition};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 44px;\n    height: 44px;\n  }\n\n  &:hover,\n  &:focus {\n    transform: ${({ theme }) => theme.animations.transform};\n  }\n`;\n\nexport const AddButtonIcon = styled.svg`\n  width: 22px;\n  height: 22px;\n  fill: currentColor;\n  stroke: currentColor;\n  margin-bottom: 6px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 16px;\n    height: 16px;\n    margin-bottom: 0;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { selectAuthToken } from 'redux/authState';\nimport { useParams } from 'react-router-dom';\n\nimport { constants } from 'constants/constants';\n\nimport {\n  AddButton,\n  AddButtonContainer,\n  AddButtonIcon,\n  AddButtonLabel,\n  NavContainer,\n  NavLinksContainer,\n  NavLinks,\n  Link,\n  AddButtonSpan,\n} from './NoticesCategoriesNav.styled';\n\nconst { icons } = constants;\n\nconst {\n  categories: { publicCategories, privateCategories },\n} = constants;\nconst publicLinks = Object.values(publicCategories);\nconst privateLinks = Object.values(privateCategories);\n\nconst NoticesCategoriesNav = () => {\n  const { categoryName } = useParams();\n\n  const isLogged = useSelector(selectAuthToken);\n\n  return (\n    <NavContainer>\n      <NavLinksContainer>\n        {publicLinks.map(([category, name], index) => (\n          <Link\n            className={categoryName === category ? 'active' : ''}\n            to={`/notices/${category}`}\n            key={name + index}\n          >\n            {name}\n          </Link>\n        ))}\n        {isLogged && (\n          <NavLinks>\n            {privateLinks.map(([category, name], index) => (\n              <Link\n                className={categoryName === category ? 'active' : ''}\n                to={`/notices/${category}`}\n                key={name + index}\n              >\n                {name}\n              </Link>\n            ))}\n          </NavLinks>\n        )}\n      </NavLinksContainer>\n      <AddButtonContainer>\n        <AddButtonLabel>add pet</AddButtonLabel>\n        <AddButton>\n          <AddButtonIcon>\n            <use href={`${icons}#icon-plus`} />\n          </AddButtonIcon>\n          <AddButtonSpan>add pet</AddButtonSpan>\n        </AddButton>\n      </AddButtonContainer>\n    </NavContainer>\n  );\n};\n\nNoticesCategoriesNav.propTypes = {\n  active: PropTypes.bool,\n};\n\nexport default NoticesCategoriesNav;\n","import styled from '@emotion/styled';\n\nexport const ItemContainer = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 100%;\n\n  background-color: ${({ theme }) => theme.backgrounds.secondary};\n  border: none;\n  border-radius: 0px 0px 20px 20px;\n\n  box-shadow: ${({ theme }) => theme.shadows.card};\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 336px;\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    width: 288px;\n  }\n`;\n\nexport const ItemImage = styled.img`\n  width: 100%;\n  object-fit: cover;\n`;\n\nexport const ItemInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 20px 0 20px;\n  width: 100%;\n`;\n\nexport const ItemInfoTitle = styled.h3`\n  font-size: 28px;\n  font-weight: 700;\n  line-height: 1.357;\n  letter-spacing: -0.01em;\n`;\n\nexport const ItemInfoText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  line-height: 1.375;\n`;\n","import PropTypes from 'prop-types';\nimport { constants } from 'constants/constants';\nimport {\n  ItemContainer,\n  ItemImage,\n  ItemInfo,\n  ItemInfoTitle,\n  ItemInfoText,\n  //   _id,\n} from './NoticeCategoryItem.styled';\n\nconst imageURLBuilder = imageURL => {\n  const { API_BASE_URL } = constants;\n  return `${API_BASE_URL.replace('api', '')}/${imageURL}`;\n};\n\nconst NoticeCategoryItem = ({ _id, imageURL, title, breed, location, birthday }) => {\n  console.log(imageURL);\n  return (\n    <ItemContainer>\n      {/* TODO: refactor image to picture with sizes */}\n      <ItemImage src={imageURL ? imageURLBuilder(imageURL?.mobile) : ''} alt={title} />\n      <ItemInfoTitle>{title}</ItemInfoTitle>\n      <ItemInfo>\n        {/* TODO: make proper layout of Info */}\n        <ItemInfoText>Breed: {breed}</ItemInfoText>\n        <ItemInfoText>BPlace: {location}</ItemInfoText>\n        {/* TODO: write function to calculate age */}\n        <ItemInfoText>Age: {birthday}</ItemInfoText>\n      </ItemInfo>\n      learn more\n      {/* TODO: insert button learn more */}\n    </ItemContainer>\n  );\n};\n\nNoticeCategoryItem.propTypes = {\n  _id: PropTypes.string.isRequired,\n  imageURL: PropTypes.shape({}),\n  title: PropTypes.string.isRequired,\n  breed: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n};\n\nexport default NoticeCategoryItem;\n","import { useListNoticesByCategoryQuery } from 'redux/notices';\n// import { useSelector } from 'react-redux';\n// import { selectAuthToken } from 'redux/authState';\n\nconst useNoticesByCategory = ({ category, page = 1 }) => {\n  // const isLogged = useSelector(selectAuthToken);\n  const { data } = useListNoticesByCategoryQuery(\n    { category, page },\n    {\n      // skip: !isLogged,\n      refetchOnMountOrArgChange: true,\n    }\n  );\n\n  return data?.data?.notices ?? [];\n};\n\nexport { useNoticesByCategory };\n","import styled from '@emotion/styled';\n\nexport const CategoriesList = styled.ul`\n  display: grid;\n  grid-template-columns: 1fr;\n  gap: 32px;\n  margin-bottom: 100px;\n\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n  @media screen and (min-width: ${({ theme }) => theme.screens.tablet}) {\n    grid-template-columns: repeat(4, 1fr);\n    margin-bottom: 200px;\n  }\n`;\n","import { useParams } from 'react-router-dom';\nimport NoticeCategoryItem from 'components/NoticeCategoryItem';\nimport { useNoticesByCategory } from 'hooks';\nimport { CategoriesList } from './NoticesCategoriesList.styled';\n\nconst NoticesCategoriesList = () => {\n  const { categoryName } = useParams();\n  const notices = useNoticesByCategory({ category: categoryName });\n\n  return (\n    <CategoriesList>\n      {notices.map(({ _id, imageURL, title, breed, birthday, location }) => (\n        <NoticeCategoryItem\n          _id={_id}\n          imageURL={imageURL}\n          title={title}\n          breed={breed}\n          birthday={birthday}\n          location={location}\n          key={_id}\n        />\n      ))}\n    </CategoriesList>\n  );\n};\n\nexport default NoticesCategoriesList;\n","import NoticesCategoriesNav from 'components/NoticesCategoriesNav';\nimport NoticesCategoriesList from 'components/NoticesCategoriesList';\nimport { Container } from 'helpers';\n\nconst NoticesPage = () => {\n  return (\n    <Container>\n      <NoticesCategoriesNav />\n      <NoticesCategoriesList />\n    </Container>\n  );\n};\n\nexport default NoticesPage;\n"],"names":["NavContainer","styled","theme","screens","tablet","NavLinksContainer","desktop","NavLinks","Link","NavLink","palette","primary","backgrounds","secondary","accent","animations","transition","triadic","transform","AddButtonContainer","AddButtonLabel","AddButtonSpan","AddButton","AddButtonIcon","icons","constants","publicCategories","privateCategories","publicLinks","Object","values","privateLinks","categoryName","useParams","isLogged","useSelector","selectAuthToken","map","index","category","name","className","to","href","ItemContainer","shadows","card","ItemImage","ItemInfo","ItemInfoTitle","ItemInfoText","imageURLBuilder","imageURL","API_BASE_URL","replace","_id","title","breed","location","birthday","console","log","src","mobile","alt","useNoticesByCategory","page","data","useListNoticesByCategoryQuery","refetchOnMountOrArgChange","notices","CategoriesList"],"sourceRoot":""}